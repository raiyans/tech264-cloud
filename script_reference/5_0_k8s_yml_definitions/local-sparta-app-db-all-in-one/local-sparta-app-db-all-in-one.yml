---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparta-app-deployment
spec:
  selector:
    matchLabels:
      app: sparta-app
  replicas: 3
  template:
    metadata:
      labels:
        app: sparta-app
    spec:
      containers:
      - name: sparta-app
        image: raiyans/sparta-test-app:v1-no-db
        ports:
        - containerPort: 80 
        env:
        - name: DB_HOST
          value: mongodb://mongo-svc:27017/posts
        - name: DB_PORT
          value: "27017"
        resources:
          requests:
            cpu: 50m  # Minimum CPU guaranteed to each pod (50 millicores)
          limits:
            cpu: 250m  # Maximum CPU each pod can use (250 millicores)
---
apiVersion: v1
kind: Service
metadata:
  name: sparta-app-svc
  namespace: default
spec:
  ports:
  - nodePort: 30002 # NodePort service can use 30000-32768
  # like a seperate machine nodePort goes to the worker nodes
    port: 3000
    targetPort: 3000 # port of the pods
  selector:
    app: sparta-app  # Label to match service to deployment
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparta-db-mongo-deployment
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:7.0.6
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage       # Updated to match PVC name
          mountPath: /data/db
        args:
        - --bind_ip_all  # Allow connections from other pods
      volumes:
      - name: mongo-storage       # Updated to match PVC name
        persistentVolumeClaim:
          claimName: mongo-pvc      # Reference to your PVC
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
  type: ClusterIP # enables only internal access to ports and not externally like internet
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi  # Only allocate what you need
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  hostPath:
    path: "/data/mongo"  # Local storage path, adjust if using cloud storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: sparta-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1  # Specifies the API version of the target resource
    kind: Deployment  # Target type is a Deployment
    name: sparta-app-deployment  # Name of the deployment to scale, matching "sparta-app-deployment"
  minReplicas: 2  # Minimum number of pod replicas the HPA maintains
  maxReplicas: 10  # Maximum number of replicas the HPA can scale up to
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50  # Target average CPU utilization at 50%